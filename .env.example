# Environment Variables for Hello FHEVM Tutorial
# Copy this file to .env and fill in your values
# 
# This tutorial demonstrates FHEVM concepts with a Confidential Counter dApp
# that includes multiple interaction modes: number input, random generation,
# threshold checking, and max value operations.

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Your private key for deployment (NEVER commit this to version control!)
# Get your private key from MetaMask: Settings > Security & Privacy > Reveal Private Key
PRIVATE_KEY=your_private_key_here

# Sepolia testnet RPC URL (using public BlastAPI endpoint)
# Alternative RPC URLs:
# - https://sepolia.infura.io/v3/YOUR_PROJECT_ID
# - https://rpc.sepolia.org
SEPOLIA_RPC_URL=https://eth-sepolia.public.blastapi.io

# =============================================================================
# FHEVM CONTRACT ADDRESSES (SEPOLIA TESTNET)
# =============================================================================
# These are the official Zama Protocol contract addresses for Sepolia testnet
# Source: https://docs.zama.ai/protocol/solidity-guides/smart-contract/configure/contract_addresses
#
# Complete list of FHEVM contracts:
# 1. FHEVM_EXECUTOR_CONTRACT - Handles encrypted computations
# 2. ACL_CONTRACT - Manages decryption permissions  
# 3. KMS_VERIFIER_CONTRACT - Verifies encryption keys
# 4. HCU_LIMIT_CONTRACT - Manages computation limits
# 5. INPUT_VERIFIER_CONTRACT - Verifies encrypted inputs
# 6. DECRYPTION_ORACLE_CONTRACT - Handles selective decryption
# 7. DECRYPTION_ADDRESS - For decrypting results
# 8. INPUT_VERIFICATION_ADDRESS - For verifying encrypted inputs
# 9. RELAYER_URL - Zama Protocol Relayer endpoint

# FHEVM Executor Contract - Handles encrypted computations
FHEVM_EXECUTOR_CONTRACT=0x848B0066793BcC60346Da1F49049357399B8D595

# Access Control List Contract - Manages decryption permissions
ACL_CONTRACT=0x687820221192C5B662b25367F70076A37bc79b6c

# Key Management Service Verifier - Verifies encryption keys
KMS_VERIFIER_CONTRACT=0x1364cBBf2cDF5032C47d8226a6f6FBD2AFCDacAC

# HCU Limit Contract - Manages computation limits
HCU_LIMIT_CONTRACT=0x594BB474275918AF9609814E68C61B1587c5F838

# Input Verifier Contract - Verifies encrypted inputs
INPUT_VERIFIER_CONTRACT=0xbc91f3daD1A5F19F8390c400196e58073B6a0BC4

# Decryption Oracle Contract - Handles selective decryption
DECRYPTION_ORACLE_CONTRACT=0xa02Cda4Ca3a71D7C46997716F4283aa851C28812

# Decryption Address - For decrypting results
DECRYPTION_ADDRESS=0xb6E160B1ff80D67Bfe90A85eE06Ce0A2613607D1

# Input Verification Address - For verifying encrypted inputs
INPUT_VERIFICATION_ADDRESS=0x7048C39f048125eDa9d678AEbaDfB22F7900a29F

# =============================================================================
# RELAYER CONFIGURATION
# =============================================================================

# Zama Protocol Relayer URL for FHEVM operations
RELAYER_URL=https://relayer.testnet.zama.cloud

# =============================================================================
# OPTIONAL CONFIGURATIONS
# =============================================================================

# Optional: Fhenix testnet RPC URL (if you want to use Fhenix instead)
# Note: This tutorial is configured for Sepolia testnet
# FHENIX_RPC_URL=https://api.testnet.fhenix.zone:7747

# Optional: Custom RPC URL for local development
# LOCAL_RPC_URL=http://127.0.0.1:8545

# Optional: Etherscan API Key for contract verification
# Get your API key from: https://etherscan.io/apis
# ETHERSCAN_API_KEY=your_etherscan_api_key_here

# =============================================================================
# TUTORIAL-SPECIFIC CONFIGURATION
# =============================================================================

# Contract deployment configuration
CONTRACT_NAME=ConfidentialCounter
CONTRACT_VERSION=1.0.0

# Frontend configuration
REACT_APP_NETWORK=sepolia
REACT_APP_CHAIN_ID=11155111
REACT_APP_BLOCK_EXPLORER=https://sepolia.etherscan.io

# =============================================================================
# GETTING STARTED
# =============================================================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Add your private key to PRIVATE_KEY
# 3. Get Sepolia testnet tokens from: https://sepoliafaucet.com/
# 4. Run: npm install && npx hardhat compile
# 5. Deploy: npx hardhat run scripts/deploy.js --network sepolia
# 6. Start frontend: cd frontend && npm start
#
# For more information, see TUTORIAL.md
